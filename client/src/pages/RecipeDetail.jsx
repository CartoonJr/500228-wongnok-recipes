// RecipeDetail.jsx
// Import ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
import React, { useEffect, useState, useCallback } from "react";
import { useParams, useNavigate } from "react-router-dom";

// ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û Placeholder
const PLACEHOLDER_IMAGE_URL = 'https://placehold.co/600x400/E2E8F0/A0AEC0?text=‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û';

// Utility function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
const formatDate = (isoDateString) => {
  if (!isoDateString) return '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà';
  try {
    const date = new Date(isoDateString);
    return date.toLocaleDateString("th-TH", {
      year: "numeric",
      month: "long",
      day: "numeric",
    });
  } catch (error) {
    console.error("Error formatting date:", error);
    return '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á';
  }
};

// ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
const RecipeDetail = ({ user, apiBaseUrl }) => {
  const { id: recipeId } = useParams(); // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ id ‡∏Ç‡∏≠‡∏á‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å URL params
  const navigate = useNavigate(); // Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ redirect ‡∏´‡∏ô‡πâ‡∏≤

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
  const [recipe, setRecipe] = useState(null);
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏´‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const [currentRating, setCurrentRating] = useState("");
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  const [hasRated, setHasRated] = useState(false);
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
  const [isLoading, setIsLoading] = useState(true);
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
  const [error, setError] = useState(null);
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  const [isSubmittingRating, setIsSubmittingRating] = useState(false);
   // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö
  const [isDeleting, setIsDeleting] = useState(false);


  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  const fetchRecipeDetails = useCallback(async () => {
    setIsLoading(true);
    setError(null);
    try {
      // 1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
      const recipeResponse = await fetch(`${apiBaseUrl}/recipes/${recipeId}`);
      if (!recipeResponse.ok) {
        throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£‡πÑ‡∏î‡πâ: ${recipeResponse.status}`);
      }
      const recipeData = await recipeResponse.json();
      setRecipe(recipeData);

      // 2. ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏´‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏µ‡πâ
      if (user && recipeData) { // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ recipeData ‡∏Å‡πà‡∏≠‡∏ô
        const ratingResponse = await fetch(`${apiBaseUrl}/ratings/${recipeId}/${user.user_id}`);
        if (ratingResponse.ok) {
          const ratingData = await ratingResponse.json();
          if (ratingData.score !== null) { // Backend ‡∏™‡πà‡∏á score: null ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏´‡πâ
            setCurrentRating(ratingData.score.toString());
            setHasRated(true);
          } else {
            setCurrentRating("");
            setHasRated(false);
          }
        } else {
          console.warn(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ: ${ratingResponse.status}`);
          setCurrentRating("");
          setHasRated(false);
        }
      }
    } catch (err) {
      console.error("‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏π‡∏ï‡∏£‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
      setError(err.message);
    } finally {
      setIsLoading(false);
    }
  }, [apiBaseUrl, recipeId, user]);

  useEffect(() => {
    fetchRecipeDetails();
  }, [fetchRecipeDetails]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  const handleSubmitRating = async () => {
    if (!currentRating || !user || !recipe) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß");
      return;
    }
    if (user.user_id === recipe.user_id) {
      alert("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ");
      return;
    }

    setIsSubmittingRating(true);
    setError(null);

    try {
      const response = await fetch(`${apiBaseUrl}/ratings`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          recipe_id: recipe.recipe_id,
          user_id: user.user_id,
          score: parseInt(currentRating, 10),
        }),
      });

      const data = await response.json();
      if (response.ok) {
        alert("‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        fetchRecipeDetails(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
      } else {
        setError(data.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏î‡πâ");
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${data.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏î‡πâ"}`);
      }
    } catch (err) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:", err);
      setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô");
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠");
    } finally {
      setIsSubmittingRating(false);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
  const handleDeleteRecipe = async () => {
    if (!recipe || !user || user.user_id !== recipe.user_id) {
      alert("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ô‡∏µ‡πâ");
      return;
    }
    if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ")) return;

    setIsDeleting(true);
    setError(null);

    try {
      const response = await fetch(`${apiBaseUrl}/recipes/${recipe.recipe_id}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ user_id_deleter: user.user_id }) // ‡∏™‡πà‡∏á user_id ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏ö
      });

      if (response.ok) {
        alert("‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        navigate("/"); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      } else {
        const errorData = await response.json();
        setError(errorData.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ");
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${errorData.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ"}`);
      }
    } catch (err) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£:", err);
      setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏™‡∏π‡∏ï‡∏£");
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠");
    } finally {
      setIsDeleting(false);
    }
  };

  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
  if (isLoading) {
    return <p style={{ textAlign: 'center', padding: '2rem' }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£...</p>;
  }
  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏´‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  if (error) {
    return <p style={{ textAlign: 'center', padding: '2rem', color: 'red' }}>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</p>;
  }
  // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ï‡∏£ (‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á)
  if (!recipe) {
    return <p style={{ textAlign: 'center', padding: '2rem' }}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</p>;
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö, ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô)
  const renderListFromString = (text, type) => {
    if (!text || typeof text !== 'string') return <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•{type}</p>;
    return text.split('\n')
      .map((line, idx) => line.trim() && <li key={`${type}-${idx}`}>{line.trim()}</li>)
      .filter(Boolean); // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤ null ‡∏´‡∏£‡∏∑‡∏≠ empty string ‡∏≠‡∏≠‡∏Å
  };


  // ‡∏™‡πà‡∏ß‡∏ô UI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå
  return (
    <div className="recipe-detail-card">
      <h2>{recipe.name}</h2>
      <div className="recipe-detail-meta">
        <span>üë®‚Äçüç≥ ‡πÇ‡∏î‡∏¢: {recipe.username || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á"}</span>
        <span style={{ marginLeft: "0.75rem" }}>
          ‚Ä¢ üïí ‡πÄ‡∏ú‡∏¢‡πÅ‡∏û‡∏£‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠: {formatDate(recipe.created_at)}
        </span>
      </div>
      <p>‚è± ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {recipe.duration || "N/A"}</p>
      <p>üéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å: {recipe.difficulty || "N/A"}</p>
      <p>
        ‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢:{" "}
        {recipe.average_rating ? Number(recipe.average_rating).toFixed(1) : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô"}
        <span style={{ fontSize: '0.85rem', color: '#A0AEC0', marginLeft: '0.3rem' }}>
          (‡∏à‡∏≤‡∏Å {recipe.review_count > 0 ? `${recipe.review_count} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß` : '0 ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß'})
        </span>
      </p>

      {recipe.image_url && (
        <img
          src={recipe.image_url}
          alt={`‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á ${recipe.name}`}
          className="recipe-detail-img"
          onError={(e) => { e.target.onerror = null; e.target.src = PLACEHOLDER_IMAGE_URL; }}
        />
      )}

      <div className="recipe-detail-section">
        <h4>‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö:</h4>
        <ul style={{ listStyleType: 'disc', paddingLeft: '20px' }}>
          {renderListFromString(recipe.ingredients, "‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö")}
        </ul>
      </div>

      <div className="recipe-detail-section">
        <h4>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥:</h4>
        <ol style={{ listStyleType: 'decimal', paddingLeft: '20px' }}>
          {renderListFromString(recipe.steps, "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô")}
        </ol>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏π‡∏ï‡∏£) */}
      {user && user.user_id === recipe.user_id && (
        <div className="detail-actions">
          <button
            onClick={() => navigate(`/edit/${recipe.recipe_id}`)}
            className="btn-edit"
            disabled={isDeleting}
          >
            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
          </button>
          <button
            onClick={handleDeleteRecipe}
            className="btn-delete"
            disabled={isDeleting}
          >
            {isDeleting ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö...' : 'üóëÔ∏è ‡∏•‡∏ö'}
          </button>
        </div>
      )}

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô) */}
      {user && user.user_id !== recipe.user_id && (
        <div >
          <h4>‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏π‡∏ï‡∏£‡∏ô‡∏µ‡πâ:</h4>
          <select
            value={currentRating}
            onChange={(e) => setCurrentRating(e.target.value)}
            disabled={isSubmittingRating}
            aria-label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô"
          >
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô --</option>
            {[1, 2, 3, 4, 5].map((n) => (
              <option key={n} value={n}>
                {Array(n).fill('‚≠ê').join('')} ({n} ‡∏î‡∏≤‡∏ß)
              </option>
            ))}
          </select>
          <button
            onClick={handleSubmitRating}
            className="btn-submit"
            disabled={isSubmittingRating || !currentRating}
          >
            {isSubmittingRating ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á...' : (hasRated ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô' : '‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô')}
          </button>
        </div>
      )}
      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ submit (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
      {error && <p className="error-msg" style={{textAlign: 'center', marginTop: '1rem'}}>‚ö†Ô∏è {error}</p>}
    </div>
  );
};

export default RecipeDetail;
